name: Build Status
# Prevent duplicate runs on the same branch
concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
    secrets: # Declare secrets expected from the caller
      HF_TOKEN:
        required: true
  push:
    branches-ignore:
      - main
    paths:
      - "app/**"
      - "tests/**"
      - "dockerfile"
      - "docker-compose.yml"
      - "requirements/**"
  pull_request:
    branches-ignore:
      - main
      - dev
    paths:
      - "app/**"
      - "dockerfile"
      - "docker-compose.yml"
      - "requirements/**"
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build:
    name: Lint, Format, and Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      WHISPER_MODEL: tiny
      DEFAULT_LANG: en
      DEVICE: cpu
      COMPUTE_TYPE: int8
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Print event info
        run: |
          echo "event name is:" ${{ github.event_name }}
          echo "event type is:" ${{ github.event.action }}
          echo "actor is:" ${{ github.actor }}
      - name: Install ffmpeg and dependencies
        run: sudo apt-get update && sudo apt-get install -y ffmpeg libblas3
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "requirements/**/*.txt"
          version: "0.6.6"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Python dependencies
        run: uv pip install --system -r requirements/dev.txt
      - name: Run Ruff linter
        run: ruff check .
      - name: Run Ruff formatter check
        run: ruff format --check .
      - name: Run tests with coverage check
        run: |
          coverage run --source=app -m pytest
          echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
          coverage html
          coverage report --fail-under=55
          echo "<details><summary>Coverage HTML Report</summary>" >> $GITHUB_STEP_SUMMARY
          cat htmlcov/index.html >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov/
