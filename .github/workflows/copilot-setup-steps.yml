name: "Copilot Setup Steps"
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml
jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    timeout-minutes: 59
    permissions:
      contents: read
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      WHISPER_MODEL: tiny
      DEFAULT_LANG: en
      DEVICE: cpu
      COMPUTE_TYPE: int8
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Common setup
        uses: ./.github/actions/setup
        with:
          python-version: "3.11"
          dependency-group: dev
      - name: Cache Hugging Face and Torch models
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: |
            ~/.cache/huggingface
            ~/.cache/torch
          key: ${{ runner.os }}-whisper-tiny-models-v1
          restore-keys: |
            ${{ runner.os }}-whisper-tiny-models-
      - name: Install hadolint
        # Install required CLI tools for validation (not handled by uv dev group)

        run: |
          wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x /usr/local/bin/hadolint
      - name: Activate venv and run pre-commit
        run: |
          source .venv/bin/activate
          pre-commit install
          pre-commit autoupdate
          pre-commit run --all-files || true
      - name: Pre-download Whisper tiny model
        run: |
          uv run python << 'EOF'
          import os
          os.environ['HF_TOKEN'] = os.getenv('HF_TOKEN', '')

          from whisperx import load_model, load_align_model

          print("ðŸ“¥ Downloading Whisper tiny model...")
          model = load_model("tiny", device="cpu", compute_type="int8")
          del model

          print("ðŸ“¥ Downloading English alignment model...")
          align_model, metadata = load_align_model(language_code="en", device="cpu")
          del align_model, metadata

          print("âœ… Models ready for testing!")
          EOF
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
