name: CI
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
on:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - "app/**"
      - "tests/**"
      - "dockerfile"
      - "docker-compose.yml"
      - "pyproject.toml"
  push:
    branches:
      - main
      - dev
    paths:
      - "app/**"
      - "tests/**"
      - "dockerfile"
      - "docker-compose.yml"
      - "pyproject.toml"
  workflow_dispatch:
  workflow_call:
jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      pull-requests: write # Needed for PR failure comment
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Common setup
        uses: ./.github/actions/setup
        with:
          python-version: "3.11"
      - name: Install hadolint
        run: |
          wget -O hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/
      - name: Run full pre-commit validation
        uses: pre-commit/action@1b06ec171f2f6faa71ed760c4042bd969e4f8b43
      - name: Comment on PR if lint job fails
        if: failure() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@e4a76dd2b0a3c2027c3fd84147a67c22ee4c90fa
        with:
          message: |
            ## :x: CI Job Failed
            **Job:** `Lint and Format`
            **Error:** Code formatting or linting checks failed
            **Run ID:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### :point_right: Next Steps
            - Review the [full logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information
            - Fix the issues and push new commits to update this PR
            - The CI will automatically re-run on new commits

            ---
            <sub>This comment was automatically generated by CI failure notification</sub>
          mode: upsert
          comment-tag: ci-lint-failure
          reactions: eyes, x
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: lint
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      WHISPER_MODEL: tiny
      DEFAULT_LANG: en
      DEVICE: cpu
      COMPUTE_TYPE: int8
    strategy:
      matrix:
        python-version: ["3.11"]
    permissions:
      contents: read
      pull-requests: write # Needed for PR failure comment
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Common setup
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests with coverage
        run: uv run pytest --junitxml=pytest-report.xml --cov=app --cov-report=xml --cov-report=term --cov-fail-under=80
      - name: Upload test report
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: test-report-${{ matrix.python-version }}
          path: pytest-report.xml
      - name: Upload coverage report
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: coverage.xml
      - name: Comment on PR if test job fails
        if: failure() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@e4a76dd2b0a3c2027c3fd84147a67c22ee4c90fa
        with:
          message: |
            ## :x: CI Job Failed
            **Job:** `Test`
            **Error:** Tests failed or coverage threshold not met
            **Run ID:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### :point_right: Next Steps
            - Review the [full logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information
            - Fix the issues and push new commits to update this PR
            - The CI will automatically re-run on new commits

            ---
            <sub>This comment was automatically generated by CI failure notification</sub>
          mode: upsert
          comment-tag: ci-test-failure
          reactions: eyes, x
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write # Needed for PR failure comment
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Dependency Review
        uses: actions/dependency-review-action@07b91577a360213440b7d4bc514338cb37ce61a0
        with:
          fail-on-severity: moderate
      - name: Comment on PR if dependency review fails
        if: failure() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@e4a76dd2b0a3c2027c3fd84147a67c22ee4c90fa
        with:
          message: |
            ## :x: CI Job Failed
            **Job:** `Dependency Review`
            **Error:** Vulnerable dependencies detected
            **Run ID:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### :point_right: Next Steps
            - Review the [full logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information
            - Update vulnerable dependencies to secure versions
            - Push new commits to update this PR
            - The CI will automatically re-run on new commits

            ---
            <sub>This comment was automatically generated by CI failure notification</sub>
          mode: upsert
          comment-tag: ci-dependency-review-failure
          reactions: eyes, x
  build:
    name: Build and Security Scan
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 30
    permissions:
      contents: read
      pull-requests: write # Needed for PR failure comment
      security-events: write # Needed for uploading SARIF reports
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@1583c0f09d26c58c59d25b0eef29792b7ce99d9a
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true # Free up ~12GB by removing large packages
          docker-images: true # Remove unused Docker images
          swap-storage: true
      - name: Build and export to Docker
        uses: docker/build-push-action@9e436ba9f2d7bcd1d038c8e55d039d37896ddc5d
        with:
          context: .
          load: true
          push: false
          tags: whisperx-fastapi:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Clean up Docker build cache
        run: |
          docker builder prune -f --filter "until=1h"
          df -h
      - name: Run Trivy vulnerability scanner (SARIF format)
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          image-ref: whisperx-fastapi:latest
          format: "sarif"
          output: "trivy-results.sarif"
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
      - name: Convert SARIF to Markdown table
        if: always()
        run: |
          wget -q https://github.com/Antvirf/go-sarif-to-markdown-table/raw/refs/heads/main/bin/sarif-to-markdown-table-linux-amd64 -O sarif-to-markdown-table-linux || \
          { echo "Failed to download SARIF conversion tool - using raw SARIF output"; cat trivy-results.sarif > trivy-results.txt; exit 0; }
          chmod +x sarif-to-markdown-table-linux
          cat trivy-results.sarif | ./sarif-to-markdown-table-linux > trivy-results.txt 2>/dev/null || cat trivy-results.sarif > trivy-results.txt
      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        if: always()
        with:
          name: trivy-results
          path: trivy-results.txt
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@16140ae1a102900babc80a33c44059580f687047
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
          category: "trivy-container-scan"
      - name: Output Trivy scan results to job summary
        if: always()
        run: |
          echo "## Trivy Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "The following vulnerabilities were found in the Docker image:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat trivy-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: Comment on PR if build job fails
        if: failure() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@e4a76dd2b0a3c2027c3fd84147a67c22ee4c90fa
        with:
          message: |
            ## :x: CI Job Failed
            **Job:** `Build and Security Scan`
            **Error:** Build process or security scan failed
            **Run ID:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### :point_right: Next Steps
            - Review the [full logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information
            - Fix the issues and push new commits to update this PR
            - The CI will automatically re-run on new commits

            ---
            <sub>This comment was automatically generated by CI failure notification</sub>
          mode: upsert
          comment-tag: ci-build-failure
          reactions: eyes, x
  dependabot-auto-merge:
    name: Auto-merge Dependabot PR
    runs-on: ubuntu-latest
    needs: [build, test, dependency-review]
    if: github.event_name == 'pull_request' && github.event.pull_request.user.login == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@5a70a1d133aebc31503dc07fb19f294cf18ff31c
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Merge the PR
        run: gh pr merge "$PR_URL" --merge
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@e5c2aa4f6acd6194e00632c8f262cff67ae17873
        id: release-please
        with:
          token: ${{ secrets.PAT_TOKEN }}
          release-type: python
      - name: Checkout release branch
        # release-please is unable to update uv.lock, so we do it ourselves

        if: ${{ steps.release-please.outputs.pr }}
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          ref: ${{ fromJson(steps.release-please.outputs.pr).headBranchName }}
      - name: Setup uv
        if: ${{ steps.release-please.outputs.pr }}
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24
      - name: Update uv.lock
        if: ${{ steps.release-please.outputs.pr }}
        run: uv lock
      - name: Commit updated uv.lock
        if: ${{ steps.release-please.outputs.pr }}
        uses: stefanzweifel/git-auto-commit-action@8fa7f5a3c51038deaa521c22ae89fac24baad8e7
        with:
          commit_message: "ci: update uv.lock"
          file_pattern: uv.lock
          commit_user_name: "GitHub Action"
          commit_user_email: "action@github.com"
  auto-merge-release-please:
    name: Auto-merge Release Please PR
    runs-on: ubuntu-latest
    needs: [release-please]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up GitHub CLI
        run: |
          sudo apt-get update && sudo apt-get install -y gh
      - name: Find and merge Release Please PRs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          prs=$(gh pr list --state open --author github-actions[bot] --json number --jq '.[].number')
          if [ -z "$prs" ]; then
            echo "No open Release Please PRs to merge."
            exit 0
          fi
          for pr in $prs; do
            echo "Merging Release Please PR #$pr"
            gh pr merge $pr --merge --admin --delete-branch || exit 1
          done
