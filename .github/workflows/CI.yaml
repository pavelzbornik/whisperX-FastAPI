name: CI
on:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - "app/**"
      - "tests/**"
      - "dockerfile"
      - "docker-compose.yml"
      - "requirements/**"
  workflow_dispatch: # Allows manual triggering of the workflow
permissions:
  contents: write
  pull-requests: write # Added permission for PR merging
jobs:
  lint:
    uses: ./.github/workflows/lint.yaml
    secrets:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
  build-and-test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: true
      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          push: false
          tags: whisperx-fastapi:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: "whisperx-fastapi:latest"
          format: "table"
          output: "trivy-results.txt"
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
      - name: Output Trivy scan results to job summary
        if: always()
        run: |
          echo "## Trivy Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "The following vulnerabilities were found in the Docker image:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat trivy-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: Run tests
        run: |
          docker run --env HF_TOKEN=${{ secrets.HF_TOKEN }} \
            --env WHISPER_MODEL=tiny \
            --env DEFAULT_LANG=en \
            --env DEVICE=cpu \
            --env COMPUTE_TYPE=int8 \
            --entrypoint /bin/bash whisperx-fastapi:latest \
            -c "pip install pytest==8.3.5 pytest-cov==6.1.1 && pytest"
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.71.0
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
  dependabot:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.event_name == 'pull_request' && github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Merge the PR
        run: gh pr merge "$PR_URL" --merge
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
